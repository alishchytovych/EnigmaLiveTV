{
    "version": "2.0.0",
    "tasks": [
		{
			"label": "build",
			"command": "dotnet",
			"type": "process",
			"args": [
				"build",
				"${workspaceFolder}/EnigmaLiveTV.csproj",
				"/property:GenerateFullPaths=true",
				"/consoleloggerparameters:NoSummary"
			],
			"problemMatcher": "$msCompile"
		},
		{
			"label": "publish",
			"command": "dotnet",
			"type": "process",
			"args": [
				"publish",
				"${workspaceFolder}/EnigmaLiveTV.csproj",
				"/property:GenerateFullPaths=true",
				"/consoleloggerparameters:NoSummary"
			],
			"problemMatcher": "$msCompile"
		},
		{
			"label": "watch",
			"command": "dotnet",
			"type": "process",
			"args": [
				"watch",
				"run",
				"${workspaceFolder}/EnigmaLiveTV.csproj",
				"/property:GenerateFullPaths=true",
				"/consoleloggerparameters:NoSummary"
			],
			"problemMatcher": "$msCompile"
		},
		{
			"type": "docker-build",
			"label": "docker-build: debug",
			"dependsOn": [
				"build"
			],
			"dockerBuild": {
				"tag": "enigmalivetv:dev",
				"target": "base",
				"dockerfile": "${workspaceFolder}/Dockerfile",
				"context": "${workspaceFolder}",
				"pull": true
			},
			"netCore": {
				"appProject": "${workspaceFolder}/EnigmaLiveTV.csproj"
			}
		},
		{
			"type": "docker-build",
			"label": "docker-build: release",
			"dependsOn": [
				"build"
			],
			"dockerBuild": {
				"tag": "enigmalivetv:latest",
				"dockerfile": "${workspaceFolder}/Dockerfile",
				"context": "${workspaceFolder}",
				"pull": true
			},
			"netCore": {
				"appProject": "${workspaceFolder}/EnigmaLiveTV.csproj"
			}
		},
		{
			"type": "docker-run",
			"label": "docker-run: debug",
			"dependsOn": [
				"docker-build: debug"
			],
			"dockerRun": {},
			"netCore": {
				"appProject": "${workspaceFolder}/EnigmaLiveTV.csproj",
				"enableDebugging": true
			}
		},
		{
			"type": "docker-run",
			"label": "docker-run: release",
			"dependsOn": [
				"docker-build: release"
			],
			"dockerRun": {},
			"netCore": {
				"appProject": "${workspaceFolder}/EnigmaLiveTV.csproj"
			}
		}
	]
}